---
import type { InferGetStaticParamsType } from 'astro';
import { PortableText } from 'astro-portabletext';
import Layout from '../../layouts/Layout.astro';
import { formatDate } from '../../utils';
import { urlFor } from '../../utils/image';
import { getAlbum, getAlbums } from '../../utils/sanity';

export async function getStaticPaths() {
  const albums = await getAlbums();
  return albums.map((album) => ({
    params: { slug: album.slug.current },
  }));
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { slug } = Astro.params as Params;

const album = await getAlbum(slug);
---

<Layout title={album.title!}>
  <section class="album">
    <div class="hero-section">
      {
        album.coverImage ? (
          <img
            class="hero-image"
            src={urlFor(album.coverImage).url()}
            alt="Cover image"
            id="parallax-image"
          />
        ) : (
          <div class="album-nocover" />
        )
      }

      <div class="hero-text">
        <p class="album-date">{formatDate(album._createdAt)}</p>
        <h1 class="album-title">{album.title}</h1>
        <p class="album-description">{album.description}</p>
      </div>
    </div>

    <div class="album-content">
      <PortableText value={album.body} />

      {
        album.gallery && album.gallery.length > 0 && (
          <div class="album-gallery">
            {album.gallery.map((image) => (
              <img class="gallery-image" src={urlFor(image).url()} alt={''} />
            ))}
          </div>
        )
      }
    </div>
  </section>

  <script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
      const parallaxImage = document.getElementById('parallax-image');
      let lastScroll = 0;

      const animate = () => {
        const currentScroll = window.pageYOffset;
        const parallaxOffset = currentScroll - lastScroll - 40;
        if (parallaxImage) {
          parallaxImage.style.transform = `translateY(${parallaxOffset}px)`;
        }

        lastScroll = currentScroll;
        requestAnimationFrame(animate);
      };

      requestAnimationFrame(animate);
    });
  </script>
</Layout>

<style>
  .album {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .hero-section {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    position: relative;
    overflow: hidden;
    height: 100dvh;
  }

  .hero-image {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 110vh;
    object-fit: cover;
    will-change: transform;
    transition: transform 0.5s cubic-bezier(0.22, 0.61, 0.36, 1);
    z-index: 0;
  }

  /* Probando keybinding */
  .album-nocover {
    width: 100%;
    height: 100dvh;
    background: var(--primary-color);
  }

  .hero-text {
    position: absolute;
    top: 45dvh;
    left: 0;
    right: 0;
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: start;
    color: var(--secondary-color);
    z-index: 2;

    text-align: center;
  }

  .album-date {
    font-size: 2rem;
    text-shadow: 0 0 0.4rem #11111188;
    opacity: 0;
    animation: fadeInUp 1s ease-out 0.3s forwards;
  }

  .album-title {
    font-size: 8rem;
    line-height: 0.9;
    font-weight: 200;
    text-shadow: 1px 1px 1.2rem #11111188;
    opacity: 0;
    animation: fadeInUp 1.2s ease-out 0.6s forwards;
  }

  .album-description {
    font-size: 2rem;
    text-shadow: 0 0 0.6rem #111111cc;
    opacity: 0;
    animation: fadeInUp 1.5s ease-out 0.9s forwards;
  }

  .album-content {
    text-align: center;
    margin: auto;
    padding-top: 98dvh;
    padding: 0.4rem;
    position: relative;
    z-index: 3;
    width: 100%;
    background-color: var(--secondary-color);
  }

  .album-gallery {
    max-width: var(--max-width);
    margin: auto;
    columns: 2;
    column-gap: 0.4rem;
  }

  .gallery-image {
    width: 100%;
    height: auto;
    object-fit: contain;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px) scale(0.95);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  @media (min-width: 800px) {
    .album-date {
      font-size: 2rem;
    }

    .album-title {
      font-size: 10rem;
      line-height: 0.9;
    }

    .album-description {
      font-size: 2rem;
      line-height: 1;
      max-width: 80rem;
    }
  }
</style>
